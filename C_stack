#include <stdio.h>
#define MAX_SIZE 10
 
int isWhat[MAX_SIZE];
int point= -1;
 
int isEmpty() {
    if (point == -1) return 1;
    return 0;
}
 
int isFull() {
    if (point == 10) return 1;
    return 0;
}
 
void into(int num) {
    if (point >= 10) printf("Full");
    else isWhat[++point] = num;
}
 
int take() {
    if (isEmpty() == 1) printf("Empty");
    else return isWhat[point--];
    return 0;
}
 
int main(int argc, char const *argv[]){
    int e;
    into(5); into(2);
 
    while(!isEmpty()){
        printf("%d", take());
        into(4); into(1); printf("%d", take());
        into(3); printf("%d", take()); printf("%d", take());
        into(6); printf("%d", take()); printf("%d", take());
    }
    
    return 0;
}

/*
1. main 코드에 존재하는 into() 함수를 통해서 10의 길이를 가진 
isWhat[]이 채워지지 않았다면 1씩 인덱스를 증가시키며, 해당 인덱스에 매개변수를 대입

2. take()를 통해서 비어 있지 않는 경우 isWhat[]에 존재하는 현재 인덱스의 이전 인덱스를 반환함 

 */